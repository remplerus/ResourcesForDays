plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle' version '[6.0.18,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17) // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('runserver')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }
    }
}

def resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
def replaceProperties = [
        minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
        forge_version: forge_version, forge_version_range: forge_version_range,
        loader_version_range: loader_version_range,
        mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
        mod_authors: mod_authors, mod_description: mod_description,
        exnihilo_range: exnihilo_range, exnihilo_version: exnihilo_version
]
processResources {
    inputs.properties replaceProperties
    replaceProperties.put 'project', project

    filesMatching(resourceTargets) {
        expand replaceProperties
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name 'jei'
        url 'https://maven.blamejared.com'
        content {
            includeGroup 'mezz.jei'
        }
    }

    maven {
        name 'NovaMachina Mods - Release'
        url 'https://dl.cloudsmith.io/public/novamachina-mods/release/maven/'
        content {
            includeGroup 'novamachina.novacore'
            includeGroup 'novamachina.exnihilosequentia'
            includeGroup 'novamachina.exnihilothermal'
            includeGroup 'novamachina.exnihilomekanism'
            includeGroup 'novamachina.exnihiloae'
            includeGroup 'novamachina.exnihilotinkers'
        }
        mavenContent {
            releasesOnly()
        }
    }
    maven {
        name 'NovaMachina Mods - Snapshot'
        url 'https://dl.cloudsmith.io/public/novamachina-mods/snapshot/maven/'
        content {
            includeGroup 'novamachina.novacore'
            includeGroup 'novamachina.exnihilosequentia'
            includeGroup 'novamachina.exnihilothermal'
            includeGroup 'novamachina.exnihilomekanism'
            includeGroup 'novamachina.exnihiloae'
            includeGroup 'novamachina.exnihilotinkers'
        }
        mavenContent {
            snapshotsOnly()
        }
    }

    maven {
        name 'cursemaven'
        url 'https://cursemaven.com'
        content {
            includeGroup 'curse.maven'
        }
    }
}

dependencies {
    minecraft "net.neoforged:forge:${minecraft_version}-${forge_version}"

    implementation fg.deobf("novamachina.exnihilosequentia:exnihilosequentia:${minecraft_version}-${exnihilo_version}")

    implementation fg.deobf("novamachina.novacore:novacore:${minecraft_version}-${nova_version}")
    runtimeOnly fg.deobf("mezz.jei:jei-${minecraft_version}-forge:+")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : mod_id,
                "Specification-Vendor"    : mod_authors,
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')